package io.github.luzzu.semantics.vocabularies;

import org.apache.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from /Users/jeremy/Documents/Codebase/Repository/Luzzu/luzzu-semantics/src/main/resources/vocabularies/daq/daq.ttl 
 * @author Auto-generated by schemagen on 02 Feb 2018 14:41 
 */
public class DAQ {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static final Model M_MODEL = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://purl.org/eis/vocab/daq#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    /** <p>Allows for metric creators to add their own profiling properties to an observation 
     *  by extending this property.</p>
     */
    public static final Property abstractProfilingProperty = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#abstractProfilingProperty" );
    
    /** <p>Allows for metric creators to add their own provenance properties to an observation 
     *  by extending this property.</p>
     */
    public static final Property abstractProvenanceProperty = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#abstractProvenanceProperty" );
    
    /** <p>Quality metrics can be (in principle) calculated on various forms of data 
     *  (such as datasets, graphs, set of triples etc...). This vocabulary allow the 
     *  owner/user of such RDF data to calculate metrics on multiple (and different) 
     *  resources.</p>
     */
    public static final Property computedOn = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#computedOn" );
    
    /** <p>This property indicates the parameters used for the probabilistic technique</p> */
    public static final Property estimationParameter = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#estimationParameter" );
    
    /** <p>Indicates the estimation parameter name of the algorithm that was used for 
     *  the quality observation.</p>
     */
    public static final Property estimationParameterKey = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#estimationParameterKey" );
    
    /** <p>Indicates the estimation parameter value of the algorithm that was used for 
     *  the quality observation.</p>
     */
    public static final Property estimationParameterValue = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#estimationParameterValue" );
    
    /** <p>This property indicates the algorithm or technique used to estimate the quality 
     *  value (e.g. Stratified Sampling vs Reservoir Sampling).</p>
     */
    public static final Property estimationTechniqueUsed = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#estimationTechniqueUsed" );
    
    /** <p>Each metric should have an expect data type for it's observed value (e.g. 
     *  xsd:boolean, xsd:double etc...)</p>
     */
    public static final Property expectedDataType = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#expectedDataType" );
    
    /** <p>The category concept classifies dimensions related to the measurement of quality 
     *  for a specific criteria. This is an abstract property and should not be used 
     *  directly. Specific sub-properties should be inherited for different dimensions.</p>
     */
    public static final Property hasDimension = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#hasDimension" );
    
    /** <p>A dimension is an abstract concept which groups an number of more concrete 
     *  metrics to measure quality of a dataset. This is an abstract property and 
     *  should not be used directly. Specific sub-properties should be inherited for 
     *  different metrics.</p>
     */
    public static final Property hasMetric = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#hasMetric" );
    
    /** <p>Computed metrics can have 1 or more quality observations, where each computed 
     *  resource has one observation.</p>
     */
    public static final Property hasObservation = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#hasObservation" );
    
    /** <p>This property flags true if an assessed observation of a metric gives an estimate 
     *  result instead of a more accurate one.</p>
     */
    public static final Property isEstimate = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#isEstimate" );
    
    /** <p>Represents the metric being observed.</p> */
    public static final Property metric = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#metric" );
    
    /** <p>A metric might require a number of external resources (e.g. a gold standard) 
     *  in order to be able to measure the quality. In order to cater for the most 
     *  generic requirement, this property links a metric to the required resource 
     *  (e.g. a URI to the gold standard dataset used).</p>
     */
    public static final Property requires = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#requires" );
    
    /** <p>This property indicates the number of entities in a dataset that had to be 
     *  assessed.</p>
     */
    public static final Property totalDatasetTriples = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#totalDatasetTriples" );
    
    /** <p>This property indicates the number of entities in a dataset that were actually 
     *  assessed. In normal assessments this would be the same as daq:totalDatasetEntities, 
     *  but in estimate metrics (e.g. Sampling) this might be different.</p>
     */
    public static final Property totalDatasetTriplesAssessed = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#totalDatasetTriplesAssessed" );
    
    /** <p>Each metric will have a value computed. In order to deal with the different 
     *  return type of the metric computation, this property links a metric with a 
     *  value object (e.g. boolean, double, Literal).</p>
     */
    public static final Property value = M_MODEL.createProperty( "http://purl.org/eis/vocab/daq#value" );
    
    /** <p>The highest level of quality metric is a category. A category groups a number 
     *  of dimensions relevant to each other which aims at measuring the quality of 
     *  a dataset from different aspects. Categories are provided as subclasses of 
     *  this abstract class, which is not intended for direct usage.</p>
     */
    public static final Resource Category = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#Category" );
    
    /** <p>Each dimension is part of a larger group called category (See daq:Category). 
     *  Each dimension has a number of metrics which are associated to it. A dimension 
     *  is linked with a category using the daq:hasDimension property. Dimensions 
     *  are provided as subclasses of this abstract class, which is not intended for 
     *  direct usage.</p>
     */
    public static final Resource Dimension = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#Dimension" );
    
    /** <p>This class represents the parameters used in an estimated observation of a 
     *  metric.</p>
     */
    public static final Resource EstimationParameter = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#EstimationParameter" );
    
    /** <p>The smallest unit of measuring a quality dimension is a metric. A metric belongs 
     *  to exactly one dimension. Each metric has one or more observations (daq:hasObservation), 
     *  which records data quality assessment value following a computation. Metrics 
     *  are provided as subclasses of this abstract class, which is not intended for 
     *  direct usage.</p>
     */
    public static final Resource Metric = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#Metric" );
    
    /** <p>A Metric Profile represents profiling and provenance information of an observation. 
     *  Therefore, this class is usually generated by an Observation.</p>
     */
    public static final Resource MetricProfile = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#MetricProfile" );
    
    /** <p>A quality observation represents the statistical and provenance information 
     *  of the attached metric's assessment activity.</p>
     */
    public static final Resource Observation = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#Observation" );
    
    /** <p>Defines a quality graph which will contain all metadata about quality metrics 
     *  on the dataset.</p>
     */
    public static final Resource QualityGraph = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#QualityGraph" );
    
    public static final Resource __ = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#" );
    
    public static final Resource dsd = M_MODEL.createResource( "http://purl.org/eis/vocab/daq#dsd" );
    
}
