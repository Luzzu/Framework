@prefix daq:							<http://purl.org/eis/vocab/daq#> .
@prefix dqv:							<http://www.w3.org/ns/dqv#> .
@prefix dc: 							<http://purl.org/dc/elements/1.1/> .
@prefix dct:     					<http://purl.org/dc/terms/>.
@prefix foaf:    					<http://xmlns.com/foaf/0.1/>.
@prefix owl:	 						<http://www.w3.org/2002/07/owl#> .
@prefix prov: 						<http://www.w3.org/ns/prov#> .
@prefix qb:		 						<http://purl.org/linked-data/cube#>.
@prefix rdf:    					<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfg:	 						<http://www.w3.org/2004/03/trix/rdfg-1/> .
@prefix rdfs:    					<http://www.w3.org/2000/01/rdf-schema#> .
@prefix sdmx-measure:   	<http://purl.org/linked-data/sdmx/2009/measure#> .
@prefix sdmx-attribute:  	<http://purl.org/linked-data/sdmx/2009/attribute#> .
@prefix sdmx-dimension:  	<http://purl.org/linked-data/sdmx/2009/dimension#> .
@prefix vann: 						<http://purl.org/vocab/vann/> .
@prefix voaf:    					<http://purl.org/vocommons/voaf#>.
@prefix xsd:     					<http://www.w3.org/2001/XMLSchema#> .

# VOCABULARY
daq:
	a owl:Ontology, voaf:Vocabulary ;
  dct:title """Dataset Quality Vocabulary (daQ)"""@en ;
  dc:description """The Dataset Quality Vocabulary (daQ) is a lightweight, extensible core vocabulary for attaching the result of quality benchmarking of a linked open dataset (usually an expensive process) to that dataset.  daQ is designed to be extended by custom quality metrics.  Use cases include filtering and ranking datasets by quality."""@en ;
  dct:creator [
    foaf:name "Jeremy Debattista";
    foaf:mbox <mailto:debattij@scss.tcd.ie>
  ] ;
	dct:contributor [
    foaf:name "Christoph Lange";
    rdfs:seeAlso <http://purl.org/net/clange>;
    foaf:homepage <http://langec.wordpress.com/about/>
  ] ;
  dct:modified "2018-02-02"^^xsd:date ;
  dct:language "en"^^xsd:language ;
  vann:preferredNamespaceUri "http://purl.org/eis/vocab/daq#";
  vann:preferredNamespacePrefix "daq";
  foaf:homepage <http://purl.org/eis/vocab/daq> ;
  vann:changes """Changes and Additions for Version modified on 02/02/2018.
  	1. daq:computedOn is defined as rdfs:subPropertyOf prov:used;
  	2. daq:Observation is correctly fixed as an rdfs:subClassOf prov:Activity instead of prov:Entity;
  	3. added daq:MetricProfile and daq:EstimationParameter for profiling and provenance of daq:Observations;
  	4. added daq:totalDatasetEntities, daq:totalDatasetEntitiesAssessed, daq:estimationTechniqueUsed,
  		daq:estimationParameter, daq:estimationParameterKey, daq:estimationParameterValue,
  		daq:abstractProfilingProperty, daq:abstractProvenanceProperty as properties
  		for provenance and profiling classes;"""@en .

# DATACUBE DATA STRUTURE DEFINITION
daq:dsd a qb:DataStructureDefinition ;
	# Dimensions
	qb:component [ qb:dimension daq:metric ; qb:order 1 ; ] ;
	qb:component [ qb:dimension daq:computedOn ; qb:order 2 ; ] ;
	qb:component [ qb:dimension sdmx-dimension:timePeriod ; qb:order 3 ; ] ;
	# Measures
	qb:component [ qb:measure daq:value ; ] .

# CLASSES
daq:QualityGraph
	a	rdfs:Class, owl:Class  ;
	rdfs:subClassOf	rdfg:Graph , qb:DataSet ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty qb:structure ;
			owl:hasValue daq:dsd
		];
	rdfs:comment	"""Defines a quality graph which will contain all metadata about quality metrics on the dataset."""@en ;
	rdfs:label """Quality Graph Statistics"""@en ;
	owl:equivalentClass dqv:QualityMeasurementDataset .


daq:Observation
	a	rdfs:Class, owl:Class ;
	rdfs:subClassOf prov:Activity, qb:Observation,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:metric ;
			owl:minCardinality "1"^^xsd:nonNegativeInteger
		] ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:value ;
			owl:cardinality "1"^^xsd:nonNegativeInteger
		] ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty sdmx-dimension:timePeriod ;
			owl:cardinality "1"^^xsd:nonNegativeInteger
		] ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:computedOn ;
			owl:cardinality "1"^^xsd:nonNegativeInteger
		]  ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:isEstimate ;
			owl:cardinality "1"^^xsd:nonNegativeInteger
		]  ;
	rdfs:comment """A quality observation represents the statistical and provenance information of the attached metric's assessment activity."""@en ;
	rdfs:label """Quality Observation"""@en ;
	owl:equivalentClass dqv:QualityMeasurement .

daq:MetricProfile
	a	rdfs:Class, owl:Class ;
	rdfs:subClassOf prov:Entity ;
	rdfs:comment """A Metric Profile represents profiling and provenance information of an observation. Therefore, this class is usually generated by an Observation."""@en ;
	rdfs:label """Metric Profile"""@en .

daq:EstimationParameter
	a	rdfs:Class, owl:Class ;
	rdfs:comment """This class represents the parameters used in an estimated observation of a metric."""@en ;
	rdfs:label """Estimation Parameter"""@en .

# Abstract Classes
daq:Category
	a	rdfs:Class, owl:Class ;
	rdfs:comment	"""The highest level of quality metric is a category. A category groups a number of dimensions relevant to each other which aims at measuring the quality of a dataset from different aspects. Categories are provided as subclasses of this abstract class, which is not intended for direct usage."""@en ;
	rdfs:label	"""Category"""@en ;
	owl:equivalentClass dqv:Category .

daq:Dimension
	a	rdfs:Class, owl:Class ;
	rdfs:comment	"""Each dimension is part of a larger group called category (See daq:Category). Each dimension has a number of metrics which are associated to it. A dimension is linked with a category using the daq:hasDimension property. Dimensions are provided as subclasses of this abstract class, which is not intended for direct usage."""@en ;
	rdfs:label	"""Dimension"""@en ;
	owl:equivalentClass dqv:Dimension .

daq:Metric
	a	rdfs:Class, owl:Class ;
	rdfs:subClassOf
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:hasObservation ;
			owl:minCardinality "1"^^xsd:nonNegativeInteger
		]  ,
		[ 	rdf:type owl:Restriction ;
			owl:onProperty daq:expectedDataType ;
			owl:cardinality "1"^^xsd:nonNegativeInteger
		]  ;
	rdfs:comment	"""The smallest unit of measuring a quality dimension is a metric. A metric belongs to exactly one dimension. Each metric has one or more observations (daq:hasObservation), which records data quality assessment value following a computation. Metrics are provided as subclasses of this abstract class, which is not intended for direct usage."""@en ;
	rdfs:label	"Metric"@en ;
	owl:equivalentClass dqv:Metric .


# PROPERTIES

# Generic Properties
daq:computedBy
	a	owl:DeprecatedProperty ;
	rdfs:label	"computed by"@en ;
	rdfs:comment """**Deprecated Property**. The computedBy property defines the Agent that computed a metric on a dataset."""@en;
	rdfs:domain	qb:Observation .

daq:computedOn
	a	rdf:Property, owl:ObjectProperty, qb:DimensionProperty ;
	rdfs:subPropertyOf prov:used ;
	owl:equivalentProperty dqv:computedOn ;
	rdfs:label	"computed on"@en ;
	rdfs:comment	"""Quality metrics can be (in principle) calculated on various forms of data (such as datasets, graphs, set of triples etc...). This vocabulary allow the owner/user of such RDF data to calculate metrics on multiple (and different) resources."""@en ;
	rdfs:domain	daq:Observation ;
	rdfs:range	rdfs:Resource .

[ owl:inverseOf daq:computedOn ] owl:equivalentProperty dqv:hasQualityMeasurement .

daq:hasObservation
		a	rdf:Property, owl:ObjectProperty ;
		rdfs:label	"has observation"@en ;
		rdfs:comment	"""Computed metrics can have 1 or more quality observations, where each computed resource has one observation."""@en ;
		rdfs:domain	daq:Metric ;
		rdfs:range	 daq:Observation ;
		owl:inverseOf daq:metric .

daq:metric
		a	rdf:Property, owl:ObjectProperty, qb:DimensionProperty ;
		rdfs:label	"metric"@en ;
		rdfs:comment	"""Represents the metric being observed."""@en ;
		rdfs:domain	daq:Observation ;
		rdfs:range	 daq:Metric ;
		owl:inverseOf daq:hasObservation ;
		owl:equivalentProperty dqv:isMeasurementOf .


daq:value
		a	rdf:Property, owl:DatatypeProperty, qb:MeasureProperty ;
		rdfs:label	"value"@en ;
		rdfs:comment	"""Each metric will have a value computed. In order to deal with the different return type of the metric computation, this property links a metric with a value object (e.g. boolean, double, Literal)."""@en ;
		rdfs:domain	daq:Observation ;
		owl:equivalentProperty dqv:value .


daq:expectedDataType
		a	rdf:Property, owl:DatatypeProperty ;
		rdfs:label	"expected data type"@en ;
		rdfs:comment	"""Each metric should have an expect data type for it's observed value (e.g. xsd:boolean, xsd:double etc...)"""@en ;
		rdfs:domain	daq:Metric ;
		rdfs:range	 xsd:anySimpleType ;
		owl:equivalentProperty dqv:expectedDataType .

daq:requires
	a	rdf:Property, owl:ObjectProperty ;
	rdfs:label	"requires"@en ;
	rdfs:comment	"""A metric might require a number of external resources (e.g. a gold standard) in order to be able to measure the quality. In order to cater for the most generic requirement, this property links a metric to the required resource (e.g. a URI to the gold standard dataset used)."""@en ;
	rdfs:domain	daq:Metric ;
	rdfs:range	rdfs:Resource .

daq:isEstimate
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"is estimate"@en ;
	rdfs:comment	"""This property flags true if an assessed observation of a metric gives an estimate result instead of a more accurate one."""@en ;
	rdfs:domain	daq:Observation ;
	rdfs:range	xsd:boolean  .

sdmx-dimension:timePeriod
	a	qb:DimensionProperty ;
	rdfs:domain	daq:Observation ;
	rdfs:range xsd:dateTime .

# Profiling and Provenance Properties
daq:totalDatasetTriples
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Total Dataset Entities"@en ;
	rdfs:comment	"""This property indicates the number of triples in a dataset that had to be assessed."""@en ;
	rdfs:domain	daq:MetricProfile ;
	rdfs:range	xsd:long  .

daq:totalDatasetTriplesAssessed
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Total Dataset Entities Assessed"@en ;
	rdfs:comment	"""This property indicates the number of triples in a dataset that were actually assessed. In normal assessments this would be the same as daq:totalDatasetEntities, but in estimate metrics (e.g. Sampling) this might be different."""@en ;
	rdfs:domain	daq:MetricProfile ;
	rdfs:range	xsd:long  .

daq:estimationTechniqueUsed
	a	rdf:Property, owl:ObjectProperty ;
	rdfs:label	"Estimation/Probabilistic Technique or Algorithm Used"@en ;
	rdfs:comment	"""This property indicates the algorithm or technique used to estimate the quality value (e.g. Stratified Sampling vs Reservoir Sampling)."""@en ;
	rdfs:domain	daq:MetricProfile ;
	rdfs:range	rdfs:Resource  .

daq:estimationParameter
	a	rdf:Property, owl:ObjectProperty ;
	rdfs:label	"Estimation Parameters Used"@en ;
	rdfs:comment	"""This property indicates the parameters used for the probabilistic technique"""@en ;
	rdfs:domain	daq:MetricProfile ;
	rdfs:range	daq:EstimationParameter  .

daq:estimationParameterKey
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Estimation Parameter Key"@en ;
	rdfs:comment	"""Indicates the estimation parameter name of the algorithm that was used for the quality observation."""@en ;
	rdfs:domain	daq:EstimationParameter ;
	rdfs:range	xsd:string  .

daq:estimationParameterValue
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Estimation Parameter Value"@en ;
	rdfs:comment	"""Indicates the estimation parameter value of the algorithm that was used for the quality observation."""@en ;
	rdfs:domain	daq:EstimationParameter ;
	rdfs:range	xsd:double  .

# Abstract Properties
daq:hasDimension
	a	rdf:Property, owl:ObjectProperty ;
	rdfs:label	"hasDimension"@en ;
	rdfs:comment	"""The category concept classifies dimensions related to the measurement of quality for a specific criteria. This is an abstract property and should not be used directly. Specific sub-properties should be inherited for different dimensions."""@en ;
	rdfs:domain	daq:Category ;
	rdfs:range	daq:Dimension .

[ owl:inverseOf daq:hasDimension ] owl:equivalentProperty dqv:inCategory .


daq:hasMetric
	a	rdf:Property, owl:ObjectProperty ;
	rdfs:label	"hasMetric"@en ;
	rdfs:comment	"""A dimension is an abstract concept which groups an number of more concrete metrics to measure quality of a dataset. This is an abstract property and should not be used directly. Specific sub-properties should be inherited for different metrics."""@en ;
	rdfs:domain	daq:Dimension ;
	rdfs:range	daq:Metric .

[ owl:inverseOf daq:hasMetric ] owl:equivalentProperty dqv:inDimension .

daq:abstractProfilingProperty
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Abstract Profiling Property"@en ;
	rdfs:comment	"""Allows for metric creators to add their own profiling properties to an observation by extending this property."""@en ;
	rdfs:domain	daq:MetricProfile .

daq:abstractProvenanceProperty
	a	rdf:Property, owl:DatatypeProperty ;
	rdfs:label	"Abstract Provenance Property"@en ;
	rdfs:comment	"""Allows for metric creators to add their own provenance properties to an observation by extending this property."""@en ;
	rdfs:domain	daq:MetricProfile .
